plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered {
            it.mappings("net.fabricmc:yarn:$rootProject.yarn_mappings:v2")
            it.mappings("dev.architectury:yarn-mappings-patch-neoforge:$rootProject.yarn_mappings_patch_neoforge_version")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven { url "https://maven.terraformersmc.com/releases/" }
        maven { url "https://maven.quiltmc.org/repository/release" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven {
            name = "Modrinth"
            url "https://api.modrinth.com/maven"
            content { includeGroup "maven.modrinth" }
        }
        maven { url 'https://maven.isxander.dev/releases' }
        maven { url 'https://jitpack.io' }
        maven {
            name = "Ladysnake Libs"
            url = 'https://maven.ladysnake.org/releases'
        }
        maven {
            url = 'https://maven.cafeteria.dev'
            content {
                includeGroup 'net.adriantodt.fabricmc'
            }
        }
        maven {
            url "https://maven.jamieswhiteshirt.com/libs-release"
            content {
                includeGroup "com.jamieswhiteshirt"
            }
        }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/" }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}

